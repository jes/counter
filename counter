#!/usr/bin/perl

use strict;
use warnings;

use Crypt::PRNG qw(rand random_string_from);
use Mojolicious::Lite;

get '/' => sub {
    my ($self) = @_;

    my $sth = app->db->prepare(qq{
        SELECT *
        FROM counters
        ORDER BY RAND()
        LIMIT 10
    });
    $sth->execute;

    my @rows;
    while (my $r = $sth->fetchrow_hashref) {
        push @rows, $r;
    }
    $self->stash(counters => \@rows);

    my ($n) = app->db->selectrow_array(qq{
        SELECT COUNT(*)
        FROM counters
    });
    $self->stash(ncounters => $n);
    $self->stash(colour => _random_colour());
    $self->stash(urlid => _generate_id());
    
    $self->render('index');
};

post '/new-counter' => sub {
    my ($self) = @_;

    if (!$self->param('name') || !$self->param('btntext')) {
        $self->redirect_to('/');
        return;
    }

    my $id = $self->param('urlid') || _generate_id();

    my ($n) = app->db->selectrow_array(qq{
        SELECT COUNT(*)
        FROM counters
        WHERE id = ?
    }, {}, $id);
    $self->redirect_to('/') if $n != 0;

    $id = substr($id, 0, 32);

    app->db->do(qq{
        INSERT INTO counters
        (id, name, btntext, count, lastupdate)
        VALUES
        (?, ?, ?, 0, NOW())
    }, {}, $id, scalar $self->param('name'), scalar $self->param('btntext'));

    $self->redirect_to("/$id");
};

post '/count/:id' => sub {
    my ($self) = @_;

    app->db->do(qq{
        UPDATE counters
        SET count = count + 1, lastupdate = NOW()
        WHERE id = ?
    }, {}, scalar $self->param('id'));

    $self->redirect_to('/' . $self->param('id'));
};

get '/:id' => sub {
    my ($self) = @_;

    my $sth = app->db->prepare(qq{
        SELECT *
        FROM counters
        WHERE id = ?
    });
    $sth->execute(scalar $self->param('id'));
    my $row = $sth->fetchrow_hashref;

    die "no row" if !$row;

    $self->stash(counter => $row);
    $self->stash(colour => _random_colour());
    $self->render('counter');
};

plugin database => {
    dsn => 'dbi:mysql:dbname=counter',
    username => 'counter',
    password => 'c0unt3r',
    options => {
        RaiseError => 1,
        mysql_auto_reconnect => 1,
    },
};

app->config(hypnotoad => {listen => ['http://*:9001']});
app->start;

sub _generate_id {
    my $chars = join('', 'a'..'z', '0'..'9');
    return random_string_from($chars, 8);
}

sub _random_colour {
    my @colours = ('#966fd6', '#f0ad4e', '#b39eb5', '#77dd77', '#ff6961', '#fdfd96', '#aec6cf', '#cb99c9', '#779ecb', '#03c03c');
    return $colours[rand scalar @colours];
}
